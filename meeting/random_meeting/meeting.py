from sched import scheduler

from django.db.models import Q

import be_near.constants
import json
import random
from be_near.constants import host, main_bot_token
from filling_profile.CallbackData import checking_meeting, meeting_feedback

import threading
import schedule
from aiogram.utils.callback_data import CallbackData
from aiogram.dispatcher.filters.builtin import CommandStart, Command
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from filling_profile.models import Profile, Profile_for_Metting, Meet
import requests
import time

import jwt
import requests

from meeting.random_meeting.change_meeting_status import change_meeting_status
from telegram_services.send_message import get_telegram_id, get_username
from telegram_services.send_message import send_message

"""  –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ—Ü–µ—Å —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Å—Ç—Ä–µ—á  """

def meeting():
    all_profiles = Profile_for_Metting.objects.all()

    while len(all_profiles) > 0:
        print(f'-------------–í–µ—Å—å —Å–ø–∏—Å–æ–∫ –¥–æ –≤–∑—è—Ç–∏—è –ø–µ—Ä–≤–æ–≥–æ: {all_profiles}---------------------')
        print(f'-------------–î–ª–∏–Ω–Ω–∞ —Å–ø–∏—Å–∫–∞ len(all_profiles): {len(all_profiles)}---------------------')
        all_profiles = list(all_profiles)
        print(f'-------------all_profiles list: {all_profiles}---------------------')
        first_profile = all_profiles.pop(0)
        print(f'-------------–ü–µ—Ä–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <profile_id>:<full_name>: {first_profile.profile.id}:{first_profile.profile.full_name}---------------------')
        print(f'-------------–í–µ—Å—å —Å–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ –≤–∑—è—Ç–∏—è –ø–µ—Ä–≤–æ–≥–æ: {all_profiles}---------------------')

        selection_list = all_profiles.copy()

        meeting_success = False
        while (len(selection_list) > 0) and (not meeting_success):
            second_profile_number = random.randint(0, len(selection_list) - 1)

            second_profile = selection_list.pop(second_profile_number)
            print(f'-------------len(selection_list): {len(selection_list)}-------------------')
            print(f'-------------–í—Ç–æ—Ä–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {second_profile.profile_id}-------------------')
            print(f'-------------–í–µ—Å—å —Å–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ –≤–∑—è—Ç–∏—è –≤—Ç–æ—Ä–æ–≥–æ: {all_profiles}---------------------')
            print(f'-------------C–ø–∏—Å–æ–∫ –≤ –∫–æ—Ç–æ—Ä–æ–º –∏—Å–∫–∞–ª—Å—è –≤—Ç–æ—Ä–æ–π: {selection_list}---------------------')

            # if ..... –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å—Ç—Ä–µ—á–∞–ª–∏—Å—å –ª–∏ first_profile –∏ second_profile –¥–æ —ç—Ç–æ–≥–æ

            meeting_list = list(Meet.objects.all().filter(Q(first_profile_id=first_profile.profile_id) | Q(second_profile_id=first_profile.profile_id)))

            print(f'-------------–°–ø–∏—Å–æ–∫ –≤ –∫–æ—Ç–æ—Ä–æ–º {first_profile} –µ—Å—Ç—å: {meeting_list}---------------------')

            meeting_indicator = False
            for meet in meeting_list:
                print(f'-------------meet:{meet}')
                print(f'-------------second_profile.profile_id == meet.first_profile_id:{int(second_profile.profile_id) == int(meet.first_profile_id)}, second_profile.profile_id == meet.second_profile_id:{int(second_profile.profile_id) == int(meet.second_profile_id)} ---------------------')
                if (int(second_profile.profile_id) == int(meet.first_profile_id)) or (int(second_profile.profile_id) == int(meet.second_profile_id)):
                    meeting_indicator = True
                    print(
                        f'-------------meeting_indicator = {meeting_indicator}. –ê –≤–µ—Å—å —Å–ø–∏—Å–æ–∫ –ø—Ä–∏ —ç—Ç–æ–º: {all_profiles}')

            print(f'-------------meeting_indicator: {meeting_indicator}---------------------')
            if not meeting_indicator:
                print(f'------------–ü–∞—Ä–∞ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∞--------------')
                meeting = Meet(first_profile_id=first_profile.profile_id, second_profile_id=second_profile.profile_id,
                               status='active')
                print(f'----meeting:{meeting}--------------')
                meeting.save()

                send_message(bot_token=main_bot_token, user_id=first_profile.profile_id,
                             text=f'–ú—ã –Ω–∞—à–ª–∏ —Ç–µ–±–µ —Å–µ–±–µ—Å–µ–¥–Ω–∏–∫–∞, –í–æ—Ç –µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—å: @{get_username(bot_token=main_bot_token, user_id=second_profile.profile_id)}. –ï–º—É –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ: {second_profile.profile.skills}.–ü—Ä–∏—è—Ç–Ω–æ–π –≤—Å—Ç—Ä–µ—á–∏ üå±')

                send_message(bot_token=main_bot_token, user_id=second_profile.profile_id,
                             text=f'–ú—ã –Ω–∞—à–ª–∏ —Ç–µ–±–µ —Å–µ–±–µ—Å–µ–¥–Ω–∏–∫–∞, –í–æ—Ç –µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—å: @{get_username(bot_token=main_bot_token, user_id=first_profile.profile_id)}. –ï–º—É –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ: {first_profile.profile.skills}.–ü—Ä–∏—è—Ç–Ω–æ–π –≤—Å—Ç—Ä–µ—á–∏ üå±')

                # –º–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –≤—Å—Ç—Ä–µ—á–∏ –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ "meeting"
                change_meeting_status(user_id=first_profile.profile_id, status="meetting")

                # –º–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –≤—Å—Ç—Ä–µ—á–∏ –≤—Ç–æ—Ä–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ "meeting"
                change_meeting_status(user_id=second_profile.profile_id, status="meetting")

                meeting_success = True
            else:

                print(f'------------–¢–∞–∫–∞—è –ø–∞—Ä–∞ —É–∂–µ –±—ã–ª–∞--------------')
                print(f'-------------–ê –≤–µ—Å—å —Å–ø–∏—Å–æ–∫ –ø—Ä–∏ —ç—Ç–æ–º: {all_profiles}---------------------')

            print(f'-------------len(selection_list): {len(selection_list)}-------------------')
            print(f'-------------not meeting_success: {not meeting_success}-------------------')

        if meeting_success == True:
            print(f'-------------–£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {all_profiles[second_profile_number]}---------------------')
            all_profiles.pop(second_profile_number)


"""  –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤ —Å—Ä–µ–¥—É, —É–¥–∞–ª–æ—Å—å –ª–∏ —Å–≤—è–∑–∞—Ç—å—Å—è —Å —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–º  """

def check_meeting_3_day():
    text = f'–ü—Ä–∏–≤–µ—Ç, —É–∂–µ —É—Å–ø–µ–ª –ø–æ–æ–±—â–∞—Ç—å—Å—è —Å'
    buttons = InlineKeyboardMarkup(
        row_width=3,
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text='–î–∞, –≤—Å—ë –≥—É–¥',
                    callback_data=checking_meeting.new(status="ok_good!"),

                ),
                InlineKeyboardButton(
                    text='–ü–∞—Ä–Ω—ë—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç',
                    callback_data=checking_meeting.new(status="not_answer")

                )
            ]
        ]
    )

    all_active_meets = Meet.objects.all().filter(status='active')

    for meets in all_active_meets:

        # –ï—Å–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –±—ã–ª —É–¥–∞–ª–µ–Ω –∫–µ–º-—Ç–æ –∏ –∫–∞–∫-—Ç–æ, —Ç–æ —ç—Ç–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç –æ—à–∏–±–∫—É
        try:
            first_profile = Profile.objects.get(id=meets.first_profile_id).contacts
            profile = True
        except Profile.DoesNotExist:
            profile = False
        if profile:
            url = f'https://api.telegram.org/bot{main_bot_token}/sendMessage?chat_id={first_profile}&text={text}&reply_markup={buttons}'

            payload = {}
            headers = {}

            response = requests.request("POST", url, headers=headers, data=payload)

            send_message(main_bot_token,first_profile,)
        profile = False
        try:
            second_profile = Profile.objects.get(id=meets.second_profile_id).contacts
            profile = True
        except Profile.DoesNotExist:
            profile = False
        if profile:
            url = f'https://api.telegram.org/bot{main_bot_token}/sendMessage?chat_id={second_profile}&text={text}&reply_markup={buttons}'
            response = requests.request("POST", url, headers=headers, data=payload)


"""  –í –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ü–µ–Ω–∫–∏ –≤—Å—Ç—Ä–µ—á–∏  """

def every_saturday():
    all_active_meets = Meet.objects.all().filter(status='active')
    buttons = InlineKeyboardMarkup(
        row_width=5,
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text='üëé',
                    callback_data=meeting_feedback.new(status="1")

                ),
                InlineKeyboardButton(
                    text='üòí',
                    callback_data=meeting_feedback.new(status="2")

                ),
                InlineKeyboardButton(
                    text='üôÇ',
                    callback_data=meeting_feedback.new(status="3")

                ),

                InlineKeyboardButton(
                    text='üòç',
                    callback_data=meeting_feedback.new(status="4")
                ),
                InlineKeyboardButton(
                    text='üëç',
                    callback_data=meeting_feedback.new(status="5")
                )

            ]
        ]
    )
    print(f'**********all_active_meets –∏–∑ every_saturday:{all_active_meets}')
    for meet in all_active_meets:
        # –ï—Å–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –±—ã–ª —É–¥–∞–ª–µ–Ω –∫–µ–º-—Ç–æ –∏ –∫–∞–∫-—Ç–æ, —Ç–æ —ç—Ç–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç –æ—à–∏–±–∫—É
        try:
            first_profile = Profile.objects.get(id=meet.first_profile_id).contacts
            profile = True
        except Profile.DoesNotExist:
            profile = False
        if profile:
            print(f'**********meet.second_profile_id –∏–∑ every_saturday:{meet.second_profile_id}')
            text = f'‚ú® –•—ç–π, –∫–∞–∫ –ø—Ä–æ—à–ª–∞ –≤—Å—Ç—Ä–µ—á–∞ —Å @{get_username(main_bot_token, meet.second_profile_id)}? –ú–æ–∂–µ—à—å –æ—Ü–µ–Ω–∏—Ç—å –≤—Å—Ç—Ä–µ—á—É?'
            url = f'https://api.telegram.org/bot{main_bot_token}/sendMessage?chat_id={first_profile}&text={text}&reply_markup={buttons}'

            payload = {}
            headers = {}

            response = requests.request("POST", url, headers=headers, data=payload)
            change_meeting_status(user_id=meet.first_profile_id, status="not ready")

        profile = False
        try:
            second_profile = Profile.objects.get(id=meet.second_profile_id).contacts
            profile = True
        except Profile.DoesNotExist:
            profile = False
        if profile:
            print(f'**********meet.first_profile_id –∏–∑ every_saturday:{meet.first_profile_id}')
            text = f'‚ú® –•—ç–π, –∫–∞–∫ –ø—Ä–æ—à–ª–∞ –≤—Å—Ç—Ä–µ—á–∞ —Å @{get_username(main_bot_token, meet.first_profile_id)}? –ú–æ–∂–µ—à—å –æ—Ü–µ–Ω–∏—Ç—å –≤—Å—Ç—Ä–µ—á—É?'
            url = f'https://api.telegram.org/bot{main_bot_token}/sendMessage?chat_id={second_profile}&text={text}&reply_markup={buttons}'
            response = requests.request("POST", url, headers=headers, data=payload)
            change_meeting_status(user_id=meet.second_profile_id, status="not ready")
        meet.status = "non_active"
        meet.save()
