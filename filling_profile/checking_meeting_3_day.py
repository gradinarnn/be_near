from be_near.constants import bot_token

import threading
import schedule
import time
from aiogram.utils.callback_data import CallbackData
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
import requests
from .models import Meet, Profile




def check_meeting_3_day():
    checking_meeting= CallbackData("first_button", "status")
    text = f'üôå –ü—Ä–∏–≤–µ—Ç! –£–∂–µ —É—Å–ø–µ–ª –ø–æ–æ–±—â–∞—Ç—å—Å—è —Å —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–º?'
    a = InlineKeyboardMarkup(
        row_width=3,
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text='–î–∞, –≤—Å—ë –≥—É–¥',
                    callback_data=checking_meeting.new(status="ok_good!"),

                ),
                InlineKeyboardButton(
                    text='–ù–µ—Ç, –µ—â—ë –Ω–µ –æ–±—â–∞–ª–∏—Å—å',
                    callback_data=checking_meeting.new(status="not_communicate")

                ),
                InlineKeyboardButton(
                    text='–ü–∞—Ä–Ω—ë—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç',
                    callback_data=checking_meeting.new(status="not_answer")

                )
            ]
        ]
    )

    all_active_meets = Meet.objects.all().filter(status='active')

    

    for meets in all_active_meets:

        # –ï—Å–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –±—ã–ª —É–¥–∞–ª–µ–Ω –∫–µ–º-—Ç–æ –∏ –∫–∞–∫-—Ç–æ, —Ç–æ —ç—Ç–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç –æ—à–∏–±–∫—É
        try:
            first_profile = Profile.objects.get(id=meets.first_profile_id).contacts
            profile = True
        except Profile.DoesNotExist:
            profile = False
        print(f"*")
        if profile:
            url = f'https://api.telegram.org/bot{bot_token}/sendMessage?chat_id={first_profile}&text={text}&reply_markup={a}'

            payload = {}
            headers = {}

            response = requests.request("POST", url, headers=headers, data=payload)
        profile = False
        try:
            second_profile = Profile.objects.get(id=meets.second_profile_id).contacts
            profile = True
        except Profile.DoesNotExist:
            profile = False
        if profile:
            url = f'https://api.telegram.org/bot{bot_token}/sendMessage?chat_id={second_profile}&text={text}&reply_markup={a}'
            response = requests.request("POST", url, headers=headers, data=payload)


def run_threaded():
    schedule.every().day.at("13:00").do(check_meeting_3_day,)


    while True:  # —ç—Ç–æ—Ç —Ü–∏–∫–ª –æ—Ç—Å—á–∏—Ç—ã–≤–∞–µ—Ç –≤—Ä–µ–º—è. –û–Ω –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω.
        print(f"-")
        schedule.run_pending()
        time.sleep(1)
    





job_thread = threading.Thread(target=run_threaded)
job_thread.start()